!function(e,t){for(var r in t)e[r]=t[r]}(exports,function(e){var t={};function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(o,n,function(t){return e[t]}.bind(null,n));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.activate=void 0;const o=r(1),n=r(2),s=r(3);t.activate=async function(e){const t=e.asAbsolutePath("node_modules/pyright/langserver.index.js");if(!s.existsSync(t))return void o.workspace.showMessage("Pyright file doesn't exist, please reinstall coc-pyright","error");const r={module:t,transport:o.TransportKind.ipc},i={documentSelector:[{scheme:"file",language:"python"}],synchronize:{configurationSection:["python","pyright"]},outputChannel:o.workspace.createOutputChannel("Pyright"),disableCompletion:!!o.workspace.getConfiguration("pyright").get("disableCompletion")},a=new o.LanguageClient("pyright","Pyright Server",r,i);e.subscriptions.push(o.services.registLanguageClient(a));const c=new n.ProgressReporting(a);e.subscriptions.push(c),["pyright.organizeimports","pyright.addoptionalforparam"].forEach(t=>{e.subscriptions.push(o.commands.registerCommand(t,async e=>{const r=await o.workspace.document,n={command:t,arguments:[r.uri.toString(),e]},s=await a.sendRequest("workspace/executeCommand",n);if(!s)return;const i={changes:{[r.uri]:s}};await o.workspace.applyEdit(i)}))}),["pyright.createtypestub"].forEach(t=>{e.subscriptions.push(o.commands.registerCommand(t,async(...e)=>{const r=o.workspace.root,n=e.pop();if(!n)return void o.workspace.showMessage("Module name is missing","warning");const s={command:t,arguments:[r,n]};a.sendRequest("workspace/executeCommand",s)}))})}},function(e,t){e.exports=require("coc.nvim")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ProgressReporting=void 0;const o=r(1);t.ProgressReporting=class{constructor(e){this.statusBarItem=o.workspace.createStatusBarItem(0,{progress:!0}),e.onReady().then(()=>{e.onNotification("pyright/beginProgress",async()=>{}),e.onNotification("pyright/reportProgress",e=>{this.statusBarItem.text="Pyright: "+e,this.statusBarItem.show()}),e.onNotification("pyright/endProgress",()=>{this.statusBarItem.hide()})})}dispose(){this.statusBarItem.dispose()}}},function(e,t){e.exports=require("fs")}]));